def clean(self):
        username = self.cleaned_data.get('username')
        if username and not User.objects.filter(username=username).exists():
            self.add_error('username', '登録されていないユーザーです')
        return super().clean()


from django import forms
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth import authenticate
from django.utils.translation import gettext_lazy as _

class UserLoginForm(AuthenticationForm):
    username = forms.EmailField(
        label='メールアドレス:',
        widget=forms.EmailInput(attrs={'autocomplete': 'username'})
    )
    password = forms.CharField(
        label='パスワード:',
        widget=forms.PasswordInput(attrs={'autocomplete': 'current-password'})
    )
    remember = forms.BooleanField(
        label='ログイン状態を保持する',
        required=False,
        widget=forms.CheckboxInput(attrs={'autocomplete': 'off'})
    )

    def clean(self):
        username = self.cleaned_data.get('username')
        password = self.cleaned_data.get('password')

        if username and password:
            self.user_cache = authenticate(self.request, username=username, password=password)
            if self.user_cache is None:
                raise forms.ValidationError(
                    _("登録されていないユーザーですまたはパスワードが違います。"),
                    code='invalid_login'
                )
            else:
                self.confirm_login_allowed(self.user_cache)

        return self.cleaned_data


<div class="form-errors">
    {% if form.non_field_errors %}
        {% for error in form.non_field_errors %}
            <div class="error">{{ error }}</div>
        {% endfor %}
    {% endif %}
</div>
